name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment configuration"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - qa
          - staging
          - prod

jobs:
  playwright-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      ENVIRONMENT: ${{ inputs.environment || 'dev' }}
      ENV_FILE: env1/.env.${{ inputs.environment || 'dev' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install Dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Clean up Old Containers (if any)
        run: |
          echo "Cleaning old containers for environment: $ENVIRONMENT"
          docker rm -f playwright-tests || echo "No container to remove"
          docker-compose --env-file $ENV_FILE down -v || echo "Nothing to stop"

      - name: Run Playwright Tests in Docker
        run: |
          echo "Running tests for environment: $ENVIRONMENT"
          docker-compose --env-file $ENV_FILE up --build --abort-on-container-exit

      - name: Copy Playwright Report (from container)
        if: always()
        run: |
          mkdir -p reports/${{ env.ENVIRONMENT }}
          docker cp playwright-tests:/app/playwright-report ./reports/${{ env.ENVIRONMENT }} || echo "No report found"

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ env.ENVIRONMENT }}
          path: reports/${{ env.ENVIRONMENT }}/
          retention-days: 30

      - name: Cleanup Containers
        if: always()
        run: |
          echo "Cleaning up containers..."
          docker-compose --env-file $ENV_FILE down -v || echo "Nothing to clean"
